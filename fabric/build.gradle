plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'fabric-loom'
}

version = "${minecraft_version}-${mod_version}-fabric"

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.20.1:2023.09.03@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    compileOnly project(":Xplat")
}

loom {
    accessWidenerPath = file("src/main/resources/mosaic_cosmetics.accesswidener")
    mixin.defaultRefmapName = "${mod_id}.refmap.json"

    runs {
        configureEach {
            runDir "../run"
            ideConfigGenerated(true)
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

tasks.withType(JavaCompile).configureEach {
    source(project(":Xplat").sourceSets.main.allSource)
}
tasks.named("sourcesJar", Jar) {
    from(project(":Xplat").sourceSets.main.allSource)
}

processResources {
    from project(":Xplat").sourceSets.main.resources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
